{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { getRecipes, getCategoryName } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function PendingScreen(props) {\n  var _route$params;\n  var navigation = props.navigation,\n    route = props.route;\n  var item = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.category;\n  var recipesArray = getRecipes(item.id);\n  useLayoutEffect(function () {\n    var _route$params2;\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.category,\n          children: getCategoryName(item.categoryId)\n        })]\n      })\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 1,\n      data: recipesArray,\n      renderItem: renderRecipes,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","FlatList","Text","View","TouchableHighlight","Image","styles","getRecipes","getCategoryName","jsx","_jsx","jsxs","_jsxs","PendingScreen","props","_route$params","navigation","route","item","params","category","recipesArray","id","_route$params2","setOptions","title","headerRight","onPressRecipe","navigate","renderRecipes","_ref","underlayColor","onPress","children","style","photo","source","uri","photo_url","categoryId","vertical","showsVerticalScrollIndicator","numColumns","data","renderItem","keyExtractor","recipeId"],"sources":["C:/repositories/iris-mob/src/screens/Pending/PendingScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, Text, View, TouchableHighlight, Image } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { getRecipes, getCategoryName } from \"../../data/MockDataAPI\";\r\n\r\nexport default function PendingScreen(props) {\r\n  const { navigation, route } = props;\r\n\r\n  const item = route?.params?.category;\r\n  const recipesArray = getRecipes(item.id);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: route.params?.title,\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight\r\n      underlayColor=\"rgba(73,182,77,0.9)\"\r\n      onPress={() => onPressRecipe(item)}\r\n    >\r\n      <View>\r\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.title}>{item.title}</Text>\r\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        vertical\r\n        showsVerticalScrollIndicator={false}\r\n        numColumns={1}\r\n        data={recipesArray}\r\n        renderItem={renderRecipes}\r\n        keyExtractor={(item) => `${item.recipeId}`}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,eAAe,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,KAAA;AAE/C,OAAOC,MAAM;AACb,SAASC,UAAU,EAAEC,eAAe;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAA,IAAAC,aAAA;EAC3C,IAAQC,UAAU,GAAYF,KAAK,CAA3BE,UAAU;IAAEC,KAAK,GAAKH,KAAK,CAAfG,KAAK;EAEzB,IAAMC,IAAI,GAAGD,KAAK,qBAAAF,aAAA,GAALE,KAAK,CAAEE,MAAM,qBAAbJ,aAAA,CAAeK,QAAQ;EACpC,IAAMC,YAAY,GAAGd,UAAU,CAACW,IAAI,CAACI,EAAE,CAAC;EAExCtB,eAAe,CAAC,YAAM;IAAA,IAAAuB,cAAA;IACpBP,UAAU,CAACQ,UAAU,CAAC;MACpBC,KAAK,GAAAF,cAAA,GAAEN,KAAK,CAACE,MAAM,qBAAZI,cAAA,CAAcE,KAAK;MAC1BC,WAAW,EAAE,SAAAA,YAAA;QAAA,OAAMhB,IAAA,CAACP,IAAI,IAAE,CAAC;MAAA;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMwB,aAAa,GAAG,SAAhBA,aAAaA,CAAIT,IAAI,EAAK;IAC9BF,UAAU,CAACY,QAAQ,CAAC,QAAQ,EAAE;MAAEV,IAAI,EAAJA;IAAK,CAAC,CAAC;EACzC,CAAC;EAED,IAAMW,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA;IAAA,IAAMZ,IAAI,GAAAY,IAAA,CAAJZ,IAAI;IAAA,OAC3BR,IAAA,CAACN,kBAAkB;MACjB2B,aAAa,EAAC,qBAAqB;MACnCC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAML,aAAa,CAACT,IAAI,CAAC;MAAA,CAAC;MAAAe,QAAA,EAEnCrB,KAAA,CAACT,IAAI;QAAA8B,QAAA,GACHvB,IAAA,CAACL,KAAK;UAAC6B,KAAK,EAAE5B,MAAM,CAAC6B,KAAM;UAACC,MAAM,EAAE;YAAEC,GAAG,EAAEnB,IAAI,CAACoB;UAAU;QAAE,CAAE,CAAC,EAC/D5B,IAAA,CAACR,IAAI;UAACgC,KAAK,EAAE5B,MAAM,CAACmB,KAAM;UAAAQ,QAAA,EAAEf,IAAI,CAACO;QAAK,CAAO,CAAC,EAC9Cf,IAAA,CAACR,IAAI;UAACgC,KAAK,EAAE5B,MAAM,CAACc,QAAS;UAAAa,QAAA,EAAEzB,eAAe,CAACU,IAAI,CAACqB,UAAU;QAAC,CAAO,CAAC;MAAA,CACnE;IAAC,CACW,CAAC;EAAA,CACtB;EAED,OACE7B,IAAA,CAACP,IAAI;IAAA8B,QAAA,EACHvB,IAAA,CAACT,QAAQ;MACPuC,QAAQ;MACRC,4BAA4B,EAAE,KAAM;MACpCC,UAAU,EAAE,CAAE;MACdC,IAAI,EAAEtB,YAAa;MACnBuB,UAAU,EAAEf,aAAc;MAC1BgB,YAAY,EAAE,SAAAA,aAAC3B,IAAI;QAAA,YAAQA,IAAI,CAAC4B,QAAQ;MAAA;IAAG,CAC5C;EAAC,CACE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}