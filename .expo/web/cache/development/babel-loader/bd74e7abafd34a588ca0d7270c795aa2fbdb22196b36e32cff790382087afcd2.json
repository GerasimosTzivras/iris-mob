{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport RNDrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport createNativeWrapper from \"../handlers/createNativeWrapper\";\nexport var ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true\n});\nexport var Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport var TextInput = createNativeWrapper(RNTextInput);\nexport var DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\nexport var FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(RNFlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});","map":{"version":3,"names":["React","RNDrawerLayoutAndroid","RNFlatList","RNSwitch","RNTextInput","RNScrollView","createNativeWrapper","ScrollView","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","positions","FlatList","forwardRef","props","ref","createElement","_extends","renderScrollComponent","scrollProps"],"sources":["C:\\repositories\\iris-mob\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,qBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,YAAA;AAUA,OAAOC,mBAAP;AAEA,OAAO,IAAMC,UAAU,GAAGD,mBAAmB,CAACD,YAAD,EAAe;EAC1DG,oBAAoB,EAAE;AADoC,CAAf,CAAtC;AAIP,OAAO,IAAMC,MAAM,GAAGH,mBAAmB,CAACH,QAAD,EAAW;EAClDO,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDH,oBAAoB,EAAE;AAH4B,CAAX,CAAlC;AAKP,OAAO,IAAMI,SAAS,GAAGN,mBAAmB,CAACF,WAAD,CAArC;AACP,OAAO,IAAMS,mBAAmB,GAAGP,mBAAmB,CAACL,qBAAD,EAAwB;EAC5EO,oBAAoB,EAAE;AADsD,CAAxB,CAA/C;AAIPK,mBAAmB,CAACC,SAApB,GAAgCb,qBAAqB,CAACa,SAAtD;AAEA,OAAO,IAAMC,QAAQ,GAAGf,KAAK,CAACgB,UAAN,CACtB,UAAoBC,KAApB,EAAiDC,GAAjD;EAAA,OACElB,KAAA,CAAAmB,aAAA,CAACjB,UAAD,EAAAkB,QAAA;IACEF,GAAG,EAAEA;EADP,GAEMD,KAFN;IAGEI,qBAAqB,EAAG,SAAAA,sBAAAC,WAAD;MAAA,OAAiBtB,KAAA,CAAAmB,aAAA,CAACZ,UAAD,EAAgBe,WAAhB;IAAA;EAH1C,GAFoB;AAAA,EAAjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}