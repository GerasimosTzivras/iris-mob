{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MultipleSelectList = function MultipleSelectList(_ref) {\n  var fontFamily = _ref.fontFamily,\n    setSelected = _ref.setSelected,\n    placeholder = _ref.placeholder,\n    boxStyles = _ref.boxStyles,\n    inputStyles = _ref.inputStyles,\n    dropdownStyles = _ref.dropdownStyles,\n    dropdownItemStyles = _ref.dropdownItemStyles,\n    dropdownTextStyles = _ref.dropdownTextStyles,\n    maxHeight = _ref.maxHeight,\n    data = _ref.data,\n    _ref$searchicon = _ref.searchicon,\n    searchicon = _ref$searchicon === void 0 ? false : _ref$searchicon,\n    _ref$arrowicon = _ref.arrowicon,\n    arrowicon = _ref$arrowicon === void 0 ? false : _ref$arrowicon,\n    _ref$closeicon = _ref.closeicon,\n    closeicon = _ref$closeicon === void 0 ? false : _ref$closeicon,\n    _ref$search = _ref.search,\n    search = _ref$search === void 0 ? true : _ref$search,\n    _ref$searchPlaceholde = _ref.searchPlaceholder,\n    searchPlaceholder = _ref$searchPlaceholde === void 0 ? \"search\" : _ref$searchPlaceholde,\n    _ref$onSelect = _ref.onSelect,\n    onSelect = _ref$onSelect === void 0 ? function () {} : _ref$onSelect,\n    label = _ref.label,\n    _ref$notFoundText = _ref.notFoundText,\n    notFoundText = _ref$notFoundText === void 0 ? \"No data found\" : _ref$notFoundText,\n    disabledItemStyles = _ref.disabledItemStyles,\n    disabledTextStyles = _ref.disabledTextStyles,\n    disabledCheckBoxStyles = _ref.disabledCheckBoxStyles,\n    labelStyles = _ref.labelStyles,\n    badgeStyles = _ref.badgeStyles,\n    badgeTextStyles = _ref.badgeTextStyles,\n    checkBoxStyles = _ref.checkBoxStyles,\n    _ref$save = _ref.save,\n    save = _ref$save === void 0 ? 'key' : _ref$save,\n    _ref$dropdownShown = _ref.dropdownShown,\n    dropdownShown = _ref$dropdownShown === void 0 ? false : _ref$dropdownShown;\n  var oldOption = React.useRef(null);\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    _firstRender = _React$useState2[0],\n    _setFirstRender = _React$useState2[1];\n  var _React$useState3 = React.useState(dropdownShown),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    dropdown = _React$useState4[0],\n    setDropdown = _React$useState4[1];\n  var _React$useState5 = React.useState([]),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selectedval = _React$useState6[0],\n    setSelectedVal = _React$useState6[1];\n  var _React$useState7 = React.useState(350),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    height = _React$useState8[0],\n    setHeight = _React$useState8[1];\n  var animatedvalue = React.useRef(new Animated.Value(0)).current;\n  var _React$useState9 = React.useState(data),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    filtereddata = _React$useState10[0],\n    setFilteredData = _React$useState10[1];\n  var slidedown = function slidedown() {\n    setDropdown(true);\n    Animated.timing(animatedvalue, {\n      toValue: height,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n  var slideup = function slideup() {\n    Animated.timing(animatedvalue, {\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: false\n    }).start(function () {\n      return setDropdown(false);\n    });\n  };\n  React.useEffect(function () {\n    if (maxHeight) setHeight(maxHeight);\n  }, [maxHeight]);\n  React.useEffect(function () {\n    setFilteredData(data);\n  }, [data]);\n  React.useEffect(function () {\n    if (_firstRender) {\n      _setFirstRender(false);\n      return;\n    }\n    onSelect();\n  }, [selectedval]);\n  React.useEffect(function () {\n    if (!_firstRender) {\n      if (dropdownShown) slidedown();else slideup();\n    }\n  }, [dropdownShown]);\n  return _jsxs(View, {\n    children: [dropdown && search ? _jsx(View, {\n      style: [styles.wrapper, boxStyles],\n      children: _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          flex: 1\n        },\n        children: [!searchicon ? _jsx(Image, {\n          source: require(\"../assets/images/search.png\"),\n          resizeMode: \"contain\",\n          style: {\n            width: 20,\n            height: 20,\n            marginRight: 7\n          }\n        }) : searchicon, _jsx(TextInput, {\n          placeholder: searchPlaceholder,\n          onChangeText: function onChangeText(val) {\n            var result = data.filter(function (item) {\n              val.toLowerCase();\n              var row = item.value.toLowerCase();\n              return row.search(val.toLowerCase()) > -1;\n            });\n            setFilteredData(result);\n          },\n          style: [{\n            padding: 0,\n            height: 20,\n            flex: 1,\n            fontFamily: fontFamily\n          }, inputStyles]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            slideup();\n          },\n          children: !closeicon ? _jsx(Image, {\n            source: require(\"../assets/images/close.png\"),\n            resizeMode: \"contain\",\n            style: {\n              width: 17,\n              height: 17\n            }\n          }) : closeicon\n        })]\n      })\n    }) : (selectedval == null ? void 0 : selectedval.length) > 0 ? _jsx(TouchableOpacity, {\n      style: [styles.wrapper, boxStyles],\n      onPress: function onPress() {\n        if (!dropdown) {\n          Keyboard.dismiss();\n          slidedown();\n        } else {\n          slideup();\n        }\n      },\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: [{\n            fontWeight: '600',\n            fontFamily: fontFamily\n          }, labelStyles],\n          children: label\n        }), _jsx(View, {\n          style: {\n            flexDirection: 'row',\n            marginBottom: 8,\n            flexWrap: 'wrap'\n          },\n          children: selectedval == null ? void 0 : selectedval.map(function (item, index) {\n            return _jsx(View, {\n              style: [{\n                backgroundColor: 'gray',\n                paddingHorizontal: 20,\n                paddingVertical: 5,\n                borderRadius: 50,\n                marginRight: 10,\n                marginTop: 10\n              }, badgeStyles],\n              children: _jsx(Text, {\n                style: [{\n                  color: 'white',\n                  fontSize: 12,\n                  fontFamily: fontFamily\n                }, badgeTextStyles],\n                children: item\n              })\n            }, index);\n          })\n        })]\n      })\n    }) : _jsxs(TouchableOpacity, {\n      style: [styles.wrapper, boxStyles],\n      onPress: function onPress() {\n        if (!dropdown) {\n          Keyboard.dismiss();\n          slidedown();\n        } else {\n          slideup();\n        }\n      },\n      children: [_jsx(Text, {\n        style: [{\n          fontFamily: fontFamily\n        }, inputStyles],\n        children: selectedval == \"\" ? placeholder ? placeholder : 'Select option' : selectedval\n      }), !arrowicon ? _jsx(Image, {\n        source: require(\"../assets/images/chevron.png\"),\n        resizeMode: \"contain\",\n        style: {\n          width: 20,\n          height: 20\n        }\n      }) : arrowicon]\n    }), dropdown ? _jsx(Animated.View, {\n      style: [{\n        maxHeight: animatedvalue\n      }, styles.dropdown, dropdownStyles],\n      children: _jsxs(View, {\n        style: [{\n          maxHeight: height\n        }],\n        children: [_jsx(ScrollView, {\n          contentContainerStyle: {\n            paddingVertical: 10\n          },\n          nestedScrollEnabled: true,\n          children: filtereddata.length >= 1 ? filtereddata.map(function (item, index) {\n            var _ref2, _item$key, _item$value, _item$disabled;\n            var key = (_ref2 = (_item$key = item.key) != null ? _item$key : item.value) != null ? _ref2 : item;\n            var value = (_item$value = item.value) != null ? _item$value : item;\n            var disabled = (_item$disabled = item.disabled) != null ? _item$disabled : false;\n            if (disabled) {\n              return _jsxs(TouchableOpacity, {\n                style: [styles.disabledoption, disabledItemStyles],\n                children: [_jsx(View, {\n                  style: [{\n                    width: 15,\n                    height: 15,\n                    marginRight: 10,\n                    borderRadius: 3,\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    backgroundColor: '#c4c5c6'\n                  }, disabledCheckBoxStyles],\n                  children: selectedval != null && selectedval.includes(value) ? _jsx(Image, {\n                    source: require(\"../assets/images/check.png\"),\n                    resizeMode: \"contain\",\n                    style: [{\n                      width: 8,\n                      height: 8,\n                      paddingLeft: 7\n                    }]\n                  }, index) : null\n                }), _jsx(Text, {\n                  style: [{\n                    fontFamily: fontFamily,\n                    color: '#c4c5c6'\n                  }, disabledTextStyles],\n                  children: value\n                })]\n              }, index);\n            } else {\n              return _jsxs(TouchableOpacity, {\n                style: [styles.option, dropdownItemStyles],\n                onPress: function onPress() {\n                  var existing = selectedval == null ? void 0 : selectedval.indexOf(value);\n                  if (existing != -1 && existing != undefined) {\n                    var sv = _toConsumableArray(selectedval);\n                    sv.splice(existing, 1);\n                    setSelectedVal(sv);\n                    setSelected(function (val) {\n                      var temp = _toConsumableArray(val);\n                      temp.splice(existing, 1);\n                      return temp;\n                    });\n                  } else {\n                    if (save === 'value') {\n                      setSelected(function (val) {\n                        var temp = _toConsumableArray(new Set([].concat(_toConsumableArray(val), [value])));\n                        return temp;\n                      });\n                    } else {\n                      setSelected(function (val) {\n                        var temp = _toConsumableArray(new Set([].concat(_toConsumableArray(val), [key])));\n                        return temp;\n                      });\n                    }\n                    setSelectedVal(function (val) {\n                      var temp = _toConsumableArray(new Set([].concat(_toConsumableArray(val), [value])));\n                      return temp;\n                    });\n                  }\n                },\n                children: [_jsx(View, {\n                  style: [{\n                    width: 15,\n                    height: 15,\n                    borderWidth: 1,\n                    marginRight: 10,\n                    borderColor: 'gray',\n                    borderRadius: 3,\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }, checkBoxStyles],\n                  children: selectedval != null && selectedval.includes(value) ? _jsx(Image, {\n                    source: require(\"../assets/images/check.png\"),\n                    resizeMode: \"contain\",\n                    style: {\n                      width: 8,\n                      height: 8,\n                      paddingLeft: 7\n                    }\n                  }, index) : null\n                }), _jsx(Text, {\n                  style: [{\n                    fontFamily: fontFamily\n                  }, dropdownTextStyles],\n                  children: value\n                })]\n              }, index);\n            }\n          }) : _jsx(TouchableOpacity, {\n            style: [styles.option, dropdownItemStyles],\n            onPress: function onPress() {\n              setSelected(undefined);\n              setSelectedVal(\"\");\n              slideup();\n              setTimeout(function () {\n                return setFilteredData(data);\n              }, 800);\n            },\n            children: _jsx(Text, {\n              style: dropdownTextStyles,\n              children: notFoundText\n            })\n          })\n        }), (selectedval == null ? void 0 : selectedval.length) > 0 ? _jsxs(Pressable, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              paddingLeft: 20\n            },\n            children: [_jsx(Text, {\n              style: {\n                marginRight: 20,\n                fontWeight: '600',\n                fontFamily: fontFamily\n              },\n              children: \"Selected\"\n            }), _jsx(View, {\n              style: {\n                height: 1,\n                flex: 1,\n                backgroundColor: 'gray'\n              }\n            })]\n          }), _jsx(View, {\n            style: {\n              flexDirection: 'row',\n              paddingHorizontal: 20,\n              marginBottom: 20,\n              flexWrap: 'wrap'\n            },\n            children: selectedval == null ? void 0 : selectedval.map(function (item, index) {\n              return _jsx(View, {\n                style: [{\n                  backgroundColor: 'gray',\n                  paddingHorizontal: 20,\n                  paddingVertical: 5,\n                  borderRadius: 50,\n                  marginRight: 10,\n                  marginTop: 10\n                }, badgeStyles],\n                children: _jsx(Text, {\n                  style: [{\n                    color: 'white',\n                    fontSize: 12,\n                    fontFamily: fontFamily\n                  }, badgeTextStyles],\n                  children: item\n                })\n              }, index);\n            })\n          })]\n        }) : null]\n      })\n    }) : null]\n  });\n};\nexport default MultipleSelectList;\nvar styles = StyleSheet.create({\n  wrapper: {\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'gray',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10\n  },\n  dropdown: {\n    borderWidth: 1,\n    borderRadius: 10,\n    borderColor: 'gray',\n    overflow: 'hidden'\n  },\n  option: {\n    paddingHorizontal: 20,\n    paddingVertical: 8,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  disabledoption: {\n    paddingHorizontal: 20,\n    paddingVertical: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'whitesmoke'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","TouchableOpacity","ScrollView","Animated","TextInput","Pressable","Keyboard","jsx","_jsx","jsxs","_jsxs","MultipleSelectList","_ref","fontFamily","setSelected","placeholder","boxStyles","inputStyles","dropdownStyles","dropdownItemStyles","dropdownTextStyles","maxHeight","data","_ref$searchicon","searchicon","_ref$arrowicon","arrowicon","_ref$closeicon","closeicon","_ref$search","search","_ref$searchPlaceholde","searchPlaceholder","_ref$onSelect","onSelect","label","_ref$notFoundText","notFoundText","disabledItemStyles","disabledTextStyles","disabledCheckBoxStyles","labelStyles","badgeStyles","badgeTextStyles","checkBoxStyles","_ref$save","save","_ref$dropdownShown","dropdownShown","oldOption","useRef","_React$useState","useState","_React$useState2","_slicedToArray","_firstRender","_setFirstRender","_React$useState3","_React$useState4","dropdown","setDropdown","_React$useState5","_React$useState6","selectedval","setSelectedVal","_React$useState7","_React$useState8","height","setHeight","animatedvalue","Value","current","_React$useState9","_React$useState10","filtereddata","setFilteredData","slidedown","timing","toValue","duration","useNativeDriver","start","slideup","useEffect","children","style","styles","wrapper","flexDirection","alignItems","flex","source","require","resizeMode","width","marginRight","onChangeText","val","result","filter","item","toLowerCase","row","value","padding","onPress","length","dismiss","fontWeight","marginBottom","flexWrap","map","index","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","color","fontSize","contentContainerStyle","nestedScrollEnabled","_ref2","_item$key","_item$value","_item$disabled","key","disabled","disabledoption","justifyContent","includes","paddingLeft","option","existing","indexOf","undefined","sv","_toConsumableArray","splice","temp","Set","concat","borderWidth","borderColor","setTimeout","create","overflow"],"sources":["C:/repositories/iris-mob/node_modules/react-native-dropdown-select-list/components/MultipleSelectList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TouchableOpacity,\n    ScrollView,\n    Animated,\n    TextInput,\n    ViewStyle,\n    Pressable,\n    Keyboard\n} from 'react-native';\n\nimport { MultipleSelectListProps } from '..';\n\ntype L1Keys = { key?: any; value?: any; disabled?: boolean | undefined }\n\nconst MultipleSelectList: React.FC<MultipleSelectListProps> = ({\n        fontFamily,\n        setSelected,\n        placeholder,\n        boxStyles,\n        inputStyles,\n        dropdownStyles,\n        dropdownItemStyles,\n        dropdownTextStyles,\n        maxHeight,\n        data,\n        searchicon = false,\n        arrowicon = false,\n        closeicon = false,\n        search = true,\n        searchPlaceholder = \"search\",\n        onSelect = () => {},\n        label,\n        notFoundText = \"No data found\",\n        disabledItemStyles,\n        disabledTextStyles,\n        disabledCheckBoxStyles,\n        labelStyles,\n        badgeStyles,\n        badgeTextStyles,\n        checkBoxStyles,\n        save = 'key',\n        dropdownShown = false\n    }) => {\n\n    const oldOption = React.useRef(null)\n    const [_firstRender,_setFirstRender] = React.useState<boolean>(true);\n    const [dropdown, setDropdown] = React.useState<boolean>(dropdownShown);\n    const [selectedval, setSelectedVal] = React.useState<any>([]);\n    const [height,setHeight] = React.useState<number>(350)\n    const animatedvalue = React.useRef(new Animated.Value(0)).current;\n    const [filtereddata,setFilteredData] = React.useState(data);\n\n\n    const slidedown = () => {\n        setDropdown(true)\n        \n        Animated.timing(animatedvalue,{\n            toValue:height,\n            duration:500,\n            useNativeDriver:false,\n            \n        }).start()\n    }\n    const slideup = () => {\n        \n        Animated.timing(animatedvalue,{\n            toValue:0,\n            duration:500,\n            useNativeDriver:false,\n            \n        }).start(() => setDropdown(false))\n    }\n\n    React.useEffect( () => {\n        if(maxHeight)\n            setHeight(maxHeight)\n    },[maxHeight])\n\n    \n    React.useEffect(() => {\n        setFilteredData(data);\n      },[data])\n\n\n    React.useEffect(() => {\n        if(_firstRender){\n          _setFirstRender(false);\n          return;\n        }\n        onSelect()\n        \n    },[selectedval])\n\n    React.useEffect(() => {\n        if(!_firstRender){\n            if(dropdownShown)\n                slidedown();\n            else\n                slideup();\n            \n        }\n        \n    },[dropdownShown])\n\n\n\n\n\n\n    return(\n        <View>\n            {\n                (dropdown && search)\n                ?\n                    <View style={[styles.wrapper,boxStyles]}>\n                        <View style={{flexDirection:'row',alignItems:'center',flex:1}}> \n                            {\n                                (!searchicon)\n                                ?\n                                <Image \n                                    source={require('../assets/images/search.png')}\n                                    resizeMode='contain'\n                                    style={{width:20,height:20,marginRight:7}}\n                                />\n                                :\n                                searchicon\n                            }\n                            \n                            <TextInput \n                                placeholder={searchPlaceholder}\n                                onChangeText={(val) => {\n                                    let result =  data.filter((item: L1Keys) => {\n                                        val.toLowerCase();\n                                        let row = item.value.toLowerCase()\n                                        return row.search(val.toLowerCase()) > -1;\n                                    });\n                                    setFilteredData(result)\n                                }}\n                                style={[{padding:0,height:20,flex:1,fontFamily},inputStyles]}\n                            />\n                                <TouchableOpacity onPress={() => {\n                                    slideup()\n                                    // setTimeout(() => setFilteredData(data), 800)\n                                }} >\n                                    {\n                                        (!closeicon)\n                                        ?\n                                            <Image \n                                                source={require('../assets/images/close.png')}\n                                                resizeMode='contain'\n                                                style={{width:17,height:17}}\n                                            />\n                                        :\n                                            closeicon\n                                    }\n                                </TouchableOpacity>\n                                \n                           \n                        </View>\n                        \n                    </View>\n                :\n\n                (selectedval?.length > 0 )\n\n                ?\n                    <TouchableOpacity style={[styles.wrapper,boxStyles]} onPress={() => { if(!dropdown){ Keyboard.dismiss(); slidedown() }else{ slideup() } }} >\n                        <View>\n                            <Text style={[{fontWeight:'600',fontFamily},labelStyles]}>{ label }</Text>\n                            <View style={{flexDirection:'row',marginBottom:8,flexWrap:'wrap'}}>\n                                {\n                                    selectedval?.map((item,index) => {\n                                        return (\n                                            <View key={index} style={[{backgroundColor:'gray',paddingHorizontal:20,paddingVertical:5,borderRadius:50,marginRight:10,marginTop:10}, badgeStyles]}>\n                                                <Text style={[{color:'white',fontSize:12,fontFamily}, badgeTextStyles]}>{item}</Text>\n                                            </View>\n                                        )\n                                    })\n                                }\n                            </View>\n                        </View>\n                    </TouchableOpacity>\n                :\n                    <TouchableOpacity style={[styles.wrapper,boxStyles]} onPress={() => { if(!dropdown){ Keyboard.dismiss(); slidedown() }else{ slideup() } }}>\n                        <Text style={[{fontFamily},inputStyles]}>{ (selectedval == \"\") ? (placeholder) ? placeholder : 'Select option' : selectedval  }</Text>\n                        {\n                            (!arrowicon)\n                            ?\n                                <Image \n                                    source={require('../assets/images/chevron.png')}\n                                    resizeMode='contain'\n                                    style={{width:20,height:20}}\n                                />\n                            :\n                                arrowicon\n                        }\n                        \n                    </TouchableOpacity>\n            }\n            \n            {\n                (dropdown)\n                ?\n                    <Animated.View style={[{maxHeight:animatedvalue},styles.dropdown, dropdownStyles]}>\n                        <View style={[{maxHeight:height}]}>\n                            <ScrollView contentContainerStyle={{paddingVertical:10}} nestedScrollEnabled={true}>\n\n                                {\n                                    (filtereddata.length >=  1)\n                                    ?\n                                    filtereddata.map((item: L1Keys,index: number) => {\n                                        let key = item.key ?? item.value ?? item;\n                                        let value = item.value ?? item;\n                                        let disabled = item.disabled ?? false;\n                                        if(disabled){\n                                            return(\n                                                <TouchableOpacity style={[styles.disabledoption,disabledItemStyles]} key={index}>\n                                                    <View style={[{width:15,height:15,marginRight:10,borderRadius:3,justifyContent:'center',alignItems:'center',backgroundColor:'#c4c5c6'},disabledCheckBoxStyles]}>\n                                                        \n                                                        {\n                                                            (selectedval?.includes(value))\n                                                            ?\n                                                                \n                                                                <Image \n                                                                    key={index}\n                                                                    source={require('../assets/images/check.png')}\n                                                                    resizeMode='contain'\n                                                                    style={[{width:8,height:8,paddingLeft:7}]}\n                                                                />\n                                                \n                                                            :\n                                                            null\n\n                                                        }\n                                                    </View>\n                                                    <Text style={[{fontFamily,color:'#c4c5c6'},disabledTextStyles]}>{value}</Text>\n                                                </TouchableOpacity>\n                                            )\n                                        }else{\n                                            return(\n                                                <TouchableOpacity style={[styles.option,dropdownItemStyles]} key={index} onPress={ () => {\n\n                                                    \n                                                    let existing = selectedval?.indexOf(value)\n\n\n                                                    // console.log(existing);\n\n                                                    if(existing != -1  && existing != undefined){\n\n                                                        let sv = [...selectedval];\n                                                        sv.splice(existing,1) \n                                                        setSelectedVal(sv);\n\n\n                                                        setSelected((val: any) => {\n                                                            let temp = [...val];\n                                                            temp.splice(existing,1) \n                                                            return temp;\n                                                        });\n                                                        \n                                                        // onSelect()\n                                                    }else{\n                                                        if(save === 'value'){\n                                                            setSelected((val: any) => {\n                                                                let temp = [...new Set([...val,value])];\n                                                                return temp;\n                                                            })\n                                                        }else{\n                                                            setSelected((val: any) => {\n                                                                let temp = [...new Set([...val,key])];\n                                                                return temp;\n                                                            })\n                                                        }\n                                                       \n                                                        setSelectedVal((val: any )=> {\n                                                            let temp = [...new Set([...val,value])];\n                                                            return temp;\n                                                        })\n                                    \n                                                        \n                                                        // onSelect()\n                                                    }\n                                                    \n                                                    \n                                                    \n                                                }}>\n                                                    <View style={[{width:15,height:15,borderWidth:1,marginRight:10,borderColor:'gray',borderRadius:3,justifyContent:'center',alignItems:'center'},checkBoxStyles]}>\n                                                        \n                                                        {\n                                                            (selectedval?.includes(value))\n                                                            ?\n                                                                \n                                                                <Image \n                                                                    key={index}\n                                                                    source={require('../assets/images/check.png')}\n                                                                    resizeMode='contain'\n                                                                    style={{width:8,height:8,paddingLeft:7}}\n                                                                />\n                                                \n                                                            :\n                                                            null\n\n                                                        }\n                                                            \n\n                                                        \n                                                        \n                                                    </View>\n                                                    <Text style={[{fontFamily},dropdownTextStyles]}>{value}</Text>\n                                                </TouchableOpacity>\n                                            )\n                                        }\n                                        \n                                    })\n                                    :\n                                    <TouchableOpacity style={[styles.option,dropdownItemStyles]} onPress={ () => {\n                                        setSelected(undefined)\n                                        setSelectedVal(\"\")\n                                        slideup()\n                                        setTimeout(() => setFilteredData(data), 800)  \n                                    }}>\n                                        <Text style={dropdownTextStyles}>{notFoundText}</Text>\n                                    </TouchableOpacity>\n                                }\n                                \n                                \n                                \n                            </ScrollView>\n                            \n                                {\n                                    (selectedval?.length > 0)\n                                    ?\n                                        <Pressable>\n                                            <View style={{flexDirection:'row', justifyContent:'space-between',alignItems:'center',paddingLeft:20}}>\n                                                <Text style={{marginRight:20,fontWeight:'600',fontFamily}}>Selected</Text>\n                                                <View style={{height: 1, flex: 1, backgroundColor: 'gray'}} />\n                                            </View>\n                                            <View style={{flexDirection:'row',paddingHorizontal:20,marginBottom:20,flexWrap:'wrap'}}>\n                                            \n                                                {\n                                                    selectedval?.map((item,index) => {\n                                                        return (\n                                                            <View key={index} style={[{backgroundColor:'gray',paddingHorizontal:20,paddingVertical:5,borderRadius:50,marginRight:10,marginTop:10},badgeStyles]}>\n                                                                <Text style={[{color:'white',fontSize:12,fontFamily},badgeTextStyles]}>{item}</Text>\n                                                            </View>\n                                                        )\n                                                    })\n                                                }\n\n                                            </View>\n                                        </Pressable>\n                                    :\n                                    null\n                                }\n                                \n                                \n                            \n                        </View>\n                       \n                    </Animated.View>\n                :\n                null\n            }\n            \n            \n        </View>\n    )\n}\n\nexport default MultipleSelectList;\n\nconst styles = StyleSheet.create({\n    wrapper:{ borderWidth:1,borderRadius:10,borderColor:'gray',paddingHorizontal:20,paddingVertical:12,flexDirection:'row',justifyContent:'space-between',marginBottom:10 },\n    dropdown:{ borderWidth:1,borderRadius:10,borderColor:'gray',overflow:'hidden'},\n    option:{ paddingHorizontal:20,paddingVertical:8,flexDirection:'row',alignItems:'center'},\n    disabledoption:{ paddingHorizontal:20,paddingVertical:8,flexDirection:'row',alignItems:'center', backgroundColor:'whitesmoke'}\n\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}