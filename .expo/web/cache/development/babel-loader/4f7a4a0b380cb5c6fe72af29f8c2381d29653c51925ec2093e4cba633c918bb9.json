{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { recipes } from \"../../data/dataArrays\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getCategoryName } from \"../../data/MockDataAPI\";\nimport { SelectList } from \"react-native-dropdown-select-list\";\nimport Label from \"../../shared/components/Label/Label\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CreateScreen(props) {\n  var navigation = props.navigation;\n  var _React$useState = React.useState(\"Useless Text\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    text = _React$useState2[0],\n    onChangeText = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    number = _React$useState4[0],\n    onChangeNumber = _React$useState4[1];\n  var _React$useState5 = React.useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    isEnabled = _React$useState6[0],\n    setIsEnabled = _React$useState6[1];\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n  var _React$useState7 = React.useState(\"\"),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    selected = _React$useState8[0],\n    _setSelected = _React$useState8[1];\n  var data = [{\n    key: \"1\",\n    value: \"Mobiles\",\n    disabled: true\n  }, {\n    key: \"2\",\n    value: \"Appliances\"\n  }, {\n    key: \"3\",\n    value: \"Cameras\"\n  }, {\n    key: \"4\",\n    value: \"Computers\",\n    disabled: true\n  }, {\n    key: \"5\",\n    value: \"Vegetables\"\n  }, {\n    key: \"6\",\n    value: \"Diary Products\"\n  }, {\n    key: \"7\",\n    value: \"Drinks\"\n  }];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuImage, {\n          onPress: function onPress() {\n            navigation.openDrawer();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var onPressRecipe = function onPressRecipe(item) {\n    navigation.navigate(\"Recipe\", {\n      item: item\n    });\n  };\n  var renderRecipes = function renderRecipes(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressRecipe(item);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item.photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.category,\n          children: getCategoryName(item.categoryId)\n        })]\n      })\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeText,\n      value: text\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: onChangeNumber,\n      value: number,\n      placeholder: \"useless placeholder\",\n      keyboardType: \"numeric\"\n    }), _jsx(Switch, {\n      trackColor: {\n        false: \"#767577\",\n        true: \"#81b0ff\"\n      },\n      thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n      ios_backgroundColor: \"#3e3e3e\",\n      onValueChange: toggleSwitch,\n      value: isEnabled\n    }), _jsx(Label, {\n      label: \"Τύπος:\"\n    }), _jsx(SelectList, {\n      setSelected: function setSelected(val) {\n        return _setSelected(val);\n      },\n      data: data,\n      save: \"value\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","SafeAreaView","StyleSheet","TextInput","Text","View","Switch","TouchableHighlight","Image","styles","recipes","MenuImage","getCategoryName","SelectList","Label","jsx","_jsx","jsxs","_jsxs","CreateScreen","props","navigation","_React$useState","useState","_React$useState2","_slicedToArray","text","onChangeText","_React$useState3","_React$useState4","number","onChangeNumber","_React$useState5","_React$useState6","isEnabled","setIsEnabled","toggleSwitch","previousState","_React$useState7","_React$useState8","selected","setSelected","data","key","value","disabled","setOptions","headerLeft","onPress","openDrawer","headerRight","onPressRecipe","item","navigate","renderRecipes","_ref","underlayColor","children","style","container","photo","source","uri","photo_url","title","category","categoryId","input","placeholder","keyboardType","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","label","val","save"],"sources":["C:/repositories/iris-mob/src/screens/Create/CreateScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  TextInput,\r\n  Text,\r\n  View,\r\n  Switch,\r\n  TouchableHighlight,\r\n  Image,\r\n} from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { recipes } from \"../../data/dataArrays\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport { getCategoryName } from \"../../data/MockDataAPI\";\r\nimport { SelectList } from \"react-native-dropdown-select-list\";\r\nimport Label from \"../../shared/components/Label/Label\";\r\n\r\nexport default function CreateScreen(props) {\r\n  const { navigation } = props;\r\n  const [text, onChangeText] = React.useState(\"Useless Text\");\r\n  const [number, onChangeNumber] = React.useState(\"\");\r\n  const [isEnabled, setIsEnabled] = React.useState(false);\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\r\n  const [selected, setSelected] = React.useState(\"\");\r\n\r\n  const data = [\r\n    { key: \"1\", value: \"Mobiles\", disabled: true },\r\n    { key: \"2\", value: \"Appliances\" },\r\n    { key: \"3\", value: \"Cameras\" },\r\n    { key: \"4\", value: \"Computers\", disabled: true },\r\n    { key: \"5\", value: \"Vegetables\" },\r\n    { key: \"6\", value: \"Diary Products\" },\r\n    { key: \"7\", value: \"Drinks\" },\r\n  ];\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerLeft: () => (\r\n        <MenuImage\r\n          onPress={() => {\r\n            navigation.openDrawer();\r\n          }}\r\n        />\r\n      ),\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const onPressRecipe = (item) => {\r\n    navigation.navigate(\"Recipe\", { item });\r\n  };\r\n\r\n  const renderRecipes = ({ item }) => (\r\n    <TouchableHighlight\r\n      underlayColor=\"rgba(73,182,77,0.9)\"\r\n      onPress={() => onPressRecipe(item)}\r\n    >\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n        <Text style={styles.title}>{item.title}</Text>\r\n        <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={onChangeText}\r\n        value={text}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        onChangeText={onChangeNumber}\r\n        value={number}\r\n        placeholder=\"useless placeholder\"\r\n        keyboardType=\"numeric\"\r\n      />\r\n\r\n      <Switch\r\n        trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\r\n        thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\r\n        ios_backgroundColor=\"#3e3e3e\"\r\n        onValueChange={toggleSwitch}\r\n        value={isEnabled}\r\n      />\r\n      <Label label={\"Τύπος:\"} />\r\n      <SelectList\r\n        setSelected={(val) => setSelected(val)}\r\n        data={data}\r\n        save=\"value\"\r\n      />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}