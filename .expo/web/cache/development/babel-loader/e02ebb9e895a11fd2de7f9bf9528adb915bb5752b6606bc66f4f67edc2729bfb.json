{"ast":null,"code":"'use strict';\n\nvar DeprecatedColorPropType = require(\"./DeprecatedColorPropType\");\nvar DeprecatedEdgeInsetsPropType = require(\"./DeprecatedEdgeInsetsPropType\");\nvar DeprecatedStyleSheetPropType = require(\"./DeprecatedStyleSheetPropType\");\nvar PropTypes = require('prop-types');\nvar DeprecatedTextStylePropTypes = require(\"./DeprecatedTextStylePropTypes\");\nvar stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);\nvar DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];\nmodule.exports = {\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  numberOfLines: PropTypes.number,\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  onLayout: PropTypes.func,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  pressRetentionOffset: DeprecatedEdgeInsetsPropType,\n  selectable: PropTypes.bool,\n  selectionColor: DeprecatedColorPropType,\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  testID: PropTypes.string,\n  nativeID: PropTypes.string,\n  allowFontScaling: PropTypes.bool,\n  maxFontSizeMultiplier: PropTypes.number,\n  accessible: PropTypes.bool,\n  adjustsFontSizeToFit: PropTypes.bool,\n  minimumFontScale: PropTypes.number,\n  disabled: PropTypes.bool,\n  dataDetectorType: PropTypes.oneOf(DataDetectorTypes)\n};","map":{"version":3,"names":["DeprecatedColorPropType","require","DeprecatedEdgeInsetsPropType","DeprecatedStyleSheetPropType","PropTypes","DeprecatedTextStylePropTypes","stylePropType","DataDetectorTypes","module","exports","ellipsizeMode","oneOf","numberOfLines","number","textBreakStrategy","onLayout","func","onPress","onLongPress","pressRetentionOffset","selectable","bool","selectionColor","suppressHighlighting","style","testID","string","nativeID","allowFontScaling","maxFontSizeMultiplier","accessible","adjustsFontSizeToFit","minimumFontScale","disabled","dataDetectorType"],"sources":["C:/repositories/iris-mob/node_modules/react-native-snap-carousel/node_modules/deprecated-react-native-prop-types/DeprecatedTextPropTypes.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedEdgeInsetsPropType = require('./DeprecatedEdgeInsetsPropType');\nconst DeprecatedStyleSheetPropType = require('./DeprecatedStyleSheetPropType');\nconst PropTypes = require('prop-types');\nconst DeprecatedTextStylePropTypes = require('./DeprecatedTextStylePropTypes');\n\nconst stylePropType = DeprecatedStyleSheetPropType(\n  DeprecatedTextStylePropTypes,\n);\n\nconst DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];\n\nmodule.exports = {\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://reactnative.dev/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://reactnative.dev/docs/text.html#numberoflines\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://reactnative.dev/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://reactnative.dev/docs/text.html#onlayout\n   */\n  onLayout: PropTypes.func,\n  /**\n   * This function is called on press.\n   *\n   * See https://reactnative.dev/docs/text.html#onpress\n   */\n  onPress: PropTypes.func,\n  /**\n   * This function is called on long press.\n   *\n   * See https://reactnative.dev/docs/text.html#onlongpress\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://reactnative.dev/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset: DeprecatedEdgeInsetsPropType,\n  /**\n   * Lets the user select text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectable\n   */\n  selectable: PropTypes.bool,\n  /**\n   * The highlight color of the text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectioncolor\n   */\n  selectionColor: DeprecatedColorPropType,\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://reactnative.dev/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://reactnative.dev/docs/text.html#testid\n   */\n  testID: PropTypes.string,\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://reactnative.dev/docs/text.html#nativeid\n   */\n  nativeID: PropTypes.string,\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://reactnative.dev/docs/text.html#allowfontscaling\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier: PropTypes.number,\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://reactnative.dev/docs/text.html#accessible\n   */\n  accessible: PropTypes.bool,\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://reactnative.dev/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit: PropTypes.bool,\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://reactnative.dev/docs/text.html#minimumfontscale\n   */\n  minimumFontScale: PropTypes.number,\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://reactnative.dev/docs/text.html#disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Determines the types of data converted to clickable URLs in text.\n   *\n   * See https://reactnative.dev/docs/text.html#dataDetectorType\n   */\n  dataDetectorType: PropTypes.oneOf(DataDetectorTypes),\n};\n"],"mappings":"AASA,YAAY;;AAEZ,IAAMA,uBAAuB,GAAGC,OAAO,4BAA4B,CAAC;AACpE,IAAMC,4BAA4B,GAAGD,OAAO,iCAAiC,CAAC;AAC9E,IAAME,4BAA4B,GAAGF,OAAO,iCAAiC,CAAC;AAC9E,IAAMG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;AACvC,IAAMI,4BAA4B,GAAGJ,OAAO,iCAAiC,CAAC;AAE9E,IAAMK,aAAa,GAAGH,4BAA4B,CAChDE,4BACF,CAAC;AAED,IAAME,iBAAiB,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC;AAEzEC,MAAM,CAACC,OAAO,GAAG;EAOfC,aAAa,EAAEN,SAAS,CAACO,KAAK,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;EAMlEC,aAAa,EAAER,SAAS,CAACS,MAAM;EAM/BC,iBAAiB,EAAEV,SAAS,CAACO,KAAK,CAAC,CAAC,QAAQ,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;EAMzEI,QAAQ,EAAEX,SAAS,CAACY,IAAI;EAMxBC,OAAO,EAAEb,SAAS,CAACY,IAAI;EAMvBE,WAAW,EAAEd,SAAS,CAACY,IAAI;EAO3BG,oBAAoB,EAAEjB,4BAA4B;EAMlDkB,UAAU,EAAEhB,SAAS,CAACiB,IAAI;EAM1BC,cAAc,EAAEtB,uBAAuB;EAMvCuB,oBAAoB,EAAEnB,SAAS,CAACiB,IAAI;EACpCG,KAAK,EAAElB,aAAa;EAMpBmB,MAAM,EAAErB,SAAS,CAACsB,MAAM;EAMxBC,QAAQ,EAAEvB,SAAS,CAACsB,MAAM;EAM1BE,gBAAgB,EAAExB,SAAS,CAACiB,IAAI;EAQhCQ,qBAAqB,EAAEzB,SAAS,CAACS,MAAM;EAMvCiB,UAAU,EAAE1B,SAAS,CAACiB,IAAI;EAM1BU,oBAAoB,EAAE3B,SAAS,CAACiB,IAAI;EAMpCW,gBAAgB,EAAE5B,SAAS,CAACS,MAAM;EAMlCoB,QAAQ,EAAE7B,SAAS,CAACiB,IAAI;EAMxBa,gBAAgB,EAAE9B,SAAS,CAACO,KAAK,CAACJ,iBAAiB;AACrD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}