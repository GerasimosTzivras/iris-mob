{"ast":null,"code":"import React, { useLayoutEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function IngredientsDetailsScreen(props) {\n  var _route$params;\n  var navigation = props.navigation,\n    route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.ingredients;\n  var ingredientsArray = getAllIngredients(item);\n  useLayoutEffect(function () {\n    var _route$params2;\n    navigation.setOptions({\n      title: (_route$params2 = route.params) == null ? void 0 : _route$params2.title,\n      headerTitleStyle: {\n        fontSize: 16\n      }\n    });\n  }, []);\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item.ingredientId);\n    var ingredient = item.ingredientId;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n  var renderIngredient = function renderIngredient(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,0.9)\",\n      onPress: function onPress() {\n        return onPressIngredient(item[0]);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: item[0].photo_url\n          }\n        }), _jsx(Text, {\n          style: styles.title,\n          children: item[0].name\n        }), _jsx(Text, {\n          style: {\n            color: \"grey\"\n          },\n          children: item[1]\n        })]\n      })\n    });\n  };\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      numColumns: 3,\n      data: ingredientsArray,\n      renderItem: renderIngredient,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + item.recipeId;\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","FlatList","Text","View","Image","TouchableHighlight","styles","getIngredientName","getAllIngredients","jsx","_jsx","jsxs","_jsxs","IngredientsDetailsScreen","props","_route$params","navigation","route","item","params","ingredients","ingredientsArray","_route$params2","setOptions","title","headerTitleStyle","fontSize","onPressIngredient","name","ingredientId","ingredient","navigate","renderIngredient","_ref","underlayColor","onPress","children","style","container","photo","source","uri","photo_url","color","vertical","showsVerticalScrollIndicator","numColumns","data","renderItem","keyExtractor","recipeId"],"sources":["C:/repositories/iris-mob/src/screens/IngredientsDetails/IngredientsDetailsScreen.js"],"sourcesContent":["import React, { useLayoutEffect } from \"react\";\r\nimport { FlatList, Text, View, Image, TouchableHighlight } from \"react-native\";\r\nimport styles from \"./styles\";\r\nimport { getIngredientName, getAllIngredients } from \"../../data/MockDataAPI\";\r\n\r\nexport default function IngredientsDetailsScreen(props) {\r\n  const { navigation, route } = props;\r\n\r\n  const item = route.params?.ingredients;\r\n  const ingredientsArray = getAllIngredients(item);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: route.params?.title,\r\n      headerTitleStyle: {\r\n        fontSize: 16,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const onPressIngredient = (item) => {\r\n    let name = getIngredientName(item.ingredientId);\r\n    let ingredient = item.ingredientId;\r\n    navigation.navigate(\"Ingredient\", { ingredient, name });\r\n  };\r\n\r\n  const renderIngredient = ({ item }) => (\r\n    <TouchableHighlight underlayColor=\"rgba(73,182,77,0.9)\" onPress={() => onPressIngredient(item[0])}>\r\n      <View style={styles.container}>\r\n        <Image style={styles.photo} source={{ uri: item[0].photo_url }} />\r\n        <Text style={styles.title}>{item[0].name}</Text>\r\n        <Text style={{ color: \"grey\" }}>{item[1]}</Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n\r\n  return (\r\n    <View>\r\n      <FlatList vertical showsVerticalScrollIndicator={false} numColumns={3} data={ingredientsArray} renderItem={renderIngredient} keyExtractor={(item) => `${item.recipeId}`} />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,eAAe,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,kBAAA;AAE/C,OAAOC,MAAM;AACb,SAASC,iBAAiB,EAAEC,iBAAiB;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE9E,eAAe,SAASC,wBAAwBA,CAACC,KAAK,EAAE;EAAA,IAAAC,aAAA;EACtD,IAAQC,UAAU,GAAYF,KAAK,CAA3BE,UAAU;IAAEC,KAAK,GAAKH,KAAK,CAAfG,KAAK;EAEzB,IAAMC,IAAI,IAAAH,aAAA,GAAGE,KAAK,CAACE,MAAM,qBAAZJ,aAAA,CAAcK,WAAW;EACtC,IAAMC,gBAAgB,GAAGb,iBAAiB,CAACU,IAAI,CAAC;EAEhDlB,eAAe,CAAC,YAAM;IAAA,IAAAsB,cAAA;IACpBN,UAAU,CAACO,UAAU,CAAC;MACpBC,KAAK,GAAAF,cAAA,GAAEL,KAAK,CAACE,MAAM,qBAAZG,cAAA,CAAcE,KAAK;MAC1BC,gBAAgB,EAAE;QAChBC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIT,IAAI,EAAK;IAClC,IAAIU,IAAI,GAAGrB,iBAAiB,CAACW,IAAI,CAACW,YAAY,CAAC;IAC/C,IAAIC,UAAU,GAAGZ,IAAI,CAACW,YAAY;IAClCb,UAAU,CAACe,QAAQ,CAAC,YAAY,EAAE;MAAED,UAAU,EAAVA,UAAU;MAAEF,IAAI,EAAJA;IAAK,CAAC,CAAC;EACzD,CAAC;EAED,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA;IAAA,IAAMf,IAAI,GAAAe,IAAA,CAAJf,IAAI;IAAA,OAC9BR,IAAA,CAACL,kBAAkB;MAAC6B,aAAa,EAAC,qBAAqB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,iBAAiB,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;MAAA,CAAC;MAAAkB,QAAA,EAChGxB,KAAA,CAACT,IAAI;QAACkC,KAAK,EAAE/B,MAAM,CAACgC,SAAU;QAAAF,QAAA,GAC5B1B,IAAA,CAACN,KAAK;UAACiC,KAAK,EAAE/B,MAAM,CAACiC,KAAM;UAACC,MAAM,EAAE;YAAEC,GAAG,EAAEvB,IAAI,CAAC,CAAC,CAAC,CAACwB;UAAU;QAAE,CAAE,CAAC,EAClEhC,IAAA,CAACR,IAAI;UAACmC,KAAK,EAAE/B,MAAM,CAACkB,KAAM;UAAAY,QAAA,EAAElB,IAAI,CAAC,CAAC,CAAC,CAACU;QAAI,CAAO,CAAC,EAChDlB,IAAA,CAACR,IAAI;UAACmC,KAAK,EAAE;YAAEM,KAAK,EAAE;UAAO,CAAE;UAAAP,QAAA,EAAElB,IAAI,CAAC,CAAC;QAAC,CAAO,CAAC;MAAA,CAC5C;IAAC,CACW,CAAC;EAAA,CACtB;EAED,OACER,IAAA,CAACP,IAAI;IAAAiC,QAAA,EACH1B,IAAA,CAACT,QAAQ;MAAC2C,QAAQ;MAACC,4BAA4B,EAAE,KAAM;MAACC,UAAU,EAAE,CAAE;MAACC,IAAI,EAAE1B,gBAAiB;MAAC2B,UAAU,EAAEhB,gBAAiB;MAACiB,YAAY,EAAE,SAAAA,aAAC/B,IAAI;QAAA,YAAQA,IAAI,CAACgC,QAAQ;MAAA;IAAG,CAAE;EAAC,CACvK,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}